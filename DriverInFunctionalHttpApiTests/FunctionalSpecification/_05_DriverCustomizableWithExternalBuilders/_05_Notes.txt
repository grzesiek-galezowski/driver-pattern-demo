- Test Data Builder pattern, completely external
- Let's again look at ShouldRejectForecastReportAsBadRequestWhenTemperatureIsLessThanMinus100 where we test that for temperature less than -100 and expect an error.

- Immutable (why?)
- This time, the ReportForecast() method doesn't do any request. Rather, it starts a chain where we append other method calls that further customize the request. At the end, there is a termination call (in this case Attempt(), but Run() can also be used here) that ends the configuration and sends the request.
  - this is similar to StringBuilder, where we have .Append().Append().ToString();
- Implementation - the context is passed along the chain of calls until the terminating call. Also the user id and tenant id are passed.
- The advantages 
  - the driver can prepare the object before allowing us to customize it, allowing for centralization of some decisions (like lambda one).
  - Simple flow
- The disadvantages 
  - we cannot reuse the building chain (we can define helper functions that encapsulate some setup)
  - awkward nesting, either introduce Begin(), End() or use other patterns to achieve nesting.